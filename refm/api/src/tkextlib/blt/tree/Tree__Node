= class Tk::BLT::Tree::Node < TkObject

== Class Methods

--- id2obj(tree, id)
#@todo



--- new(tree, parent, keys = {})
#@todo



== Instance Methods

--- apply(keys = {})
#@todo



--- children
#@todo



--- copy(parent, keys = {})
#@todo



--- copy_to(dest_tree, parent, keys = {})
#@todo



--- degree
#@todo



--- delete
#@todo



--- depth
#@todo



--- dump
#@todo



--- dump_to_file(file)
#@todo



--- exist?(keys = {})
#@todo



--- find(keys = {})
#@todo



--- find_child(label)
#@todo



--- first_child
#@todo



--- fullpath
#@todo



--- get
#@todo



--- get_value(key, default_val = None)
#@todo



--- id
#@todo



--- index
#@todo



--- keys
#@todo



--- label(text = nil)
#@todo



--- label=(text)
#@todo



--- last_child
#@todo



--- leaf?
#@todo



--- link?
#@todo



--- move(dest, keys = {})
#@todo



--- next
#@todo



--- next_sibling
#@todo



--- parent
#@todo



--- position
#@todo



--- prev_sibling
#@todo



--- previous
#@todo



--- restore(str, keys = {})
#@todo



--- restore_from_file(file, keys = {})
#@todo



--- restore_overwrite(str, keys = {})
#@todo



--- restore_overwrite_from_file(file, keys = {})
#@todo



--- root
#@todo



--- root?
#@todo



--- set(data)
#@todo



--- size
#@todo



--- sort(keys = {})
#@todo



--- type(key)
#@todo



--- unset(*keys)
#@todo



--- values(key = None)
#@todo



