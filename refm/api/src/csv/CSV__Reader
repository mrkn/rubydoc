#@since 1.8.0

= class CSV::Reader < Object

include Enumerable

CSVの読み込み時のベースとなるクラス

== Class Methods

--- parse(str_or_readable[, fs = ','[, rs = nil]]) -> CSV::StringReader
--- parse(str_or_readable[, fs = ','[, rs = nil]]) {|row| ... } -> nil

CSVデータを解析して、[[c:CSV::StringReader]]を返します。
ブロックに渡された場合はパースした結果を1列づつArrayとして渡します。

@param str_or_readable パースする対象の文字列
@param fs フィールドセパレータの指定。
          nil (デフォルト) で ',' をセパレータとします。
@param rs 行区切り文字の指定。nil (デフォルト) で CrLf / Lf。
          Cr を行区切りとしたい場合は ?\r を渡します。

例:
  CSV::Reader.parse("1,2,3\nA,B,C\n"){|row|
    p row
  }

--- create(str_or_readable[, fs = ','[, rs = nil]]) -> CSV::StringReader

CSVデータを解析して、解析結果を格納した[[c:CSV::StringReader]]を返します。

@param str_or_readable パースする対象の文字列
@param fs フィールドセパレータの指定。
          nil (デフォルト) で ',' をセパレータとします。
@param rs 行区切り文字の指定。nil (デフォルト) で CrLf / Lf。
          Cr を行区切りとしたい場合は ?\r を渡します。

== Instance Methods

--- each {|row| ... } -> nil
自身から 1 行ずつ読み込み、それを引数として与えられたブロックを実行します。

--- shift -> Array
CSVをパースした結果から1行分を取り除き、取り除いた1行を配列として返します。

shiftは破壊的メソッドです。

--- close -> nil
内部的にterminateメソッドを呼び出します。

== Private Instance Methods

--- initialize(dev) -> ()
本メソッドは再定義orサブクラスで定義されるのを想定されています。
再定義せずに呼び出した場合は例外RuntimeErrorが発生します。

--- get_row(row) -> ()
本メソッドは再定義orサブクラスで定義されるのを想定されています。
再定義せずに呼び出した場合は例外NotImplementedErrorが発生します。

--- terminate -> ()
終了時処理を行う場合に再定義してください。

#@end
