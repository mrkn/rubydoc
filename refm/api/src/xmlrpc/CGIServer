= class XMLRPC::CGIServer < XMLRPC::BasicServer

Implements a CGI-based XML-RPC server.

    require "xmlrpc/server"

    s = XMLRPC::CGIServer.new

    s.add_handler("michael.add") do |a,b|
      a + b
    end

    s.add_handler("michael.div") do |a,b|
      if b == 0
        raise XMLRPC::FaultException.new(1, "division by zero")
      else
        a / b
      end
    end

    s.set_default_handler do |name, *args|
      raise XMLRPC::FaultException.new(-99, "Method #{name} missing" +
                                       " or wrong number of parameters!")
    end

    s.serve

== Class Methods

--- new( *a )
Creates a new XMLRPC::CGIServer instance. All parameters given
are by-passed to [[unknown:XMLRPC::BasicServer.new]]. You can only create
((*one*)) XMLRPC::CGIServer instance, because more than one makes
no sense.

== Instance Methods
--- serve
Call this after you have added all you handlers to the server.
This method processes a XML-RPC methodCall and sends the answer
back to the client.
Make sure that you don't write to standard-output in a handler, or in
any other part of your program, this would case a CGI-based server to fail!
