= class DL::Handle < Object

オープンされたダイナミックライブラリを表すクラスです。
([[man:dlopen(3)]] が返すハンドラーのラッパークラスです。)

== Class Methods

--- new(lib)                    -> DL::Handle
--- new(lib) {|handle| ... }    -> DL::Handle
#@todo

ライブラリ lib をオープンし、Handle オブジェクト handle を返します。

ブロックを指定すれば、
オープンしたハンドルをブロック引数に渡してブロックを実行します。
ハンドルはブロックの終りで自動的にクローズされます。

== Instance Methods

--- close    -> Integer
#@todo

Handle.new(lib) によってオープンされたハンドルをクローズします。

--- enable_close     -> nil
--- disable_close    -> nil
#@todo

GC によるオブジェクトの回収時に、ハンドルをクローズするかどうかを指定します。

--- sym(func, prototype = nil)    -> DL::Symbol
--- [](func, prototype = nil)     -> DL::Symbol
#@todo

関数やグローバル変数 func へのポインタを取得し、
[[c:DL::Symbol]] オブジェクトや [[c:DL::PtrData]] オブジェクトを返します。
prototype は型修飾からなる文字列で関数のプロトタイプを示します。

class [[c:DL]] "Type Specifiers" も参照。

@param func 得たい関数の名前を文字列で与えます。

@param type 関数のプロトタイプを文字列で指定します。

--- to_i    -> Integer
#@todo

--- to_ptr    -> DL::PtrData
#@todo

