= Errno

システムコールのエラーに対応する例外を集めたモジュールです。

== 内部クラス:

以下の例外クラスが定義されています(システムに定義されていれば)。個々の
例外の意味はシステム依存です。これらのクラス全般の説明については 
((<Errno::EXXX>)) を参照してください。

なお、Ruby にとって未知の(以下の一覧にはない)システムエラーが発生した
場合は、(({Errno::E((|xxx|))})) (((|xxx|)) は、エラー番号を表す 3 桁の
数字)という名の例外クラスが作成されます。

: ERROR
  この例外クラスは ((<BeOS>)) の場合に限ります。
: EPERM
: ENOENT
: ESRCH
: EINTR
: EIO
: ENXIO
: E2BIG
: ENOEXEC
: EBADF
: ECHILD
: EAGAIN
: ENOMEM
: EACCES
: EFAULT
: ENOTBLK
: EBUSY
: EEXIST
: EXDEV
: ENODEV
: ENOTDIR
: EISDIR
: EINVAL
: ENFILE
: EMFILE
: ENOTTY
: ETXTBSY
: EFBIG
: ENOSPC
: ESPIPE
: EROFS
: EMLINK
: EPIPE
: EDOM
: ERANGE
: EDEADLK
: ENAMETOOLONG
: ENOLCK
: ENOSYS
: ENOTEMPTY
: ELOOP
: EWOULDBLOCK
: ENOMSG
: EIDRM
: ECHRNG
: EL2NSYNC
: EL3HLT
: EL3RST
: ELNRNG
: EUNATCH
: ENOCSI
: EL2HLT
: EBADE
: EBADR
: EXFULL
: ENOANO
: EBADRQC
: EBADSLT
: EDEADLOCK
: EBFONT
: ENOSTR
: ENODATA
: ETIME
: ENOSR
: ENONET
: ENOPKG
: EREMOTE
: ENOLINK
: EADV
: ESRMNT
: ECOMM
: EPROTO
: EMULTIHOP
: EDOTDOT
: EBADMSG
: EOVERFLOW
: ENOTUNIQ
: EBADFD
: EREMCHG
: ELIBACC
: ELIBBAD
: ELIBSCN
: ELIBMAX
: ELIBEXEC
: EILSEQ
: ERESTART
: ESTRPIPE
: EUSERS
: ENOTSOCK
: EDESTADDRREQ
: EMSGSIZE
: EPROTOTYPE
: ENOPROTOOPT
: EPROTONOSUPPORT
: ESOCKTNOSUPPORT
: EOPNOTSUPP
: EPFNOSUPPORT
: EAFNOSUPPORT
: EADDRINUSE
: EADDRNOTAVAIL
: ENETDOWN
: ENETUNREACH
: ENETRESET
: ECONNABORTED
: ECONNRESET
: ENOBUFS
: EISCONN
: ENOTCONN
: ESHUTDOWN
: ETOOMANYREFS
: ETIMEDOUT
: ECONNREFUSED
: EHOSTDOWN
: EHOSTUNREACH
: EALREADY
: EINPROGRESS
: ESTALE
: EUCLEAN
: ENOTNAM
: ENAVAIL
: EISNAM
: EREMOTEIO
: EDQUOT


#@# Errno::EXXX.rd imported.
= Errno::EXXX

各 (({errno})) に対応する例外クラスです。実際のクラス名については 
((<Errno>)) モジュールとシステムのマニュアル ((<errno(3)|manual page>)) 
を参照してください。

== スーパークラス:

* ((<SystemCallError>))

== 定数:

--- Errno

    各クラスに対応する (({errno})) の値です。

    (({Errno::EXXX::Errno})) 定数は、対応する値が常に設定されています
    が、((<SystemCallError#errno|SystemCallError/errno>)) メソッドは実
    際にエラーが発生してなければ (({nil})) を返します。

    ((<ruby 1.8 feature>)): Errno::EXXX では対応する errno 値がオブジェ
    クト生成時に設定されています。下記の例を参照。

    : 例:

      (({Errno::EAGAIN})) と (({Errno::EWOULDBLOCK})) はシステムによっ
      ては同じ (({errno})) 値を持つ例外クラスです。以下は (({Errno})) 
      定数によりこのことを調べています。

        p Errno::EAGAIN::Errno            # => 11
        p Errno::EWOULDBLOCK::Errno       # => 11

        p Errno::EAGAIN.new.errno         # => nil
        p Errno::EWOULDBLOCK.new.errno    # => nil

      ((<ruby 1.8 feature>))

        p Errno::EAGAIN.new.errno         # => 11
        p Errno::EWOULDBLOCK.new.errno    # => 11
