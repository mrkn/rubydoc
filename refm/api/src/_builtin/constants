== Constants

--- TRUE
#@todo

((<obsolete>))

代表的な真の値。true と同じ。Ruby では偽でない値
(false でも nil でもない値) は全て真とみなされます。

--- FALSE
#@todo

((<obsolete>))

偽の値。false と同じ。

--- NIL
#@todo

((<obsolete>))

nil と同じ。

--- STDIN
#@todo

標準入力。[[m:$stdin]] のデフォルト値。

--- STDOUT
#@todo

標準出力。[[m:$stdout]] のデフォルト値。

--- STDERR
#@todo

標準エラー出力。[[m:$stderr]] のデフォルト値。

--- ENV
#@todo

環境変数を表す (疑似) 連想配列 (詳細は [[c:ENV]] を参照)。
この連想配列の値を変更すると子プロセスの環境として引き継がれます。

--- ARGF
#@todo

引数 (なければ標準入力) で構成される仮想ファイル (詳細は [[c:ARGF]] を参照)。
つまり [[m:Kernel#gets]] は [[m:ARGF.gets]] と同じ意味です。
[[m:ARGF.file]] で現在読み込み中のファイルオブジェクトが、
[[m:ARGF.filename]] で現在読み込み中のファイル名が得られます。

--- ARGV
#@todo

Ruby スクリプトに与えられた引数。
組み込み変数 [[m:$*]] の別名。
Ruby 自身に対する引数は取り除かれています。

--- DATA
#@todo

スクリプトの __END__
([[unknown:スクリプトの終り|プログラム/プログラムの終り]])
以降をアクセスする [[c:File]] オブジェクト。

注意:

    * DATA.rewind で移動する読みとり位置は __END__ 直後ではなく、
      スクリプトファイルの先頭です。
    * スクリプトが標準入力から読みこまれた場合は標準入力になります。
    * スクリプトがファイルや標準入力から読みこまれなかった場合や、
      __END__ で終っていない場合には定義されません。
    * [[m:Kernel#require]] や [[m:Kernel#load]] で
      読み込まれたファイルの中であってもそのファイル (__FILE__)
      ではなく実行されたファイル ($0) を指します。

--- TOPLEVEL_BINDING
#@todo

[[unknown:Ruby用語集/トップレベル]]での [[c:Binding]] オブジェクト。

--- RUBY_VERSION
#@todo

Ruby のバージョンを示す文字列。
Ruby のバージョンは、major.minor.teeny という形式です。
それぞれの番号は (今のところ) 2 桁以上にならないと約束されていますので、

    if RUBY_VERSION >= '1.6.7'
      # バージョン 1.6.7 以降で有効な処理
    else
      # それ以前のバージョンで有効な処理
    end

とバージョンの違いによる処理の分岐を書くことができます。

Ruby 1.8 までは、minor が奇数のバージョンは開発版、
minor が偶数のバージョンは安定版です。
RUby 1.9.0 以降は、teeny が 0 のバージョンが開発版となる予定です。

--- RUBY_RELEASE_DATE
#@todo

Ruby のリリース日を示す文字列。

--- RUBY_PLATFORM
#@todo

プラットフォームを示す文字列。

#@if (version < "1.9.0")
--- VERSION
#@todo

((<obsolete>))

RUBY_VERSION の古い名前です。

--- RELEASE_DATE
#@todo

((<obsolete>))

RUBY_RELEASE_DATE の古い名前です。

--- PLATFORM
#@todo

((<obsolete>))

RUBY_PLATFORM の古い名前です。
#@end

--- SCRIPT_LINES__
#@todo

この定数は、デフォルトでは定義されていません。

この定数がハッシュとして定義された後にソースが((*コンパイル*))されると、
そのソースファイル名をキーに、
ソースを行毎に分割した配列を値にしたハッシュ要素が設定されます。
この定数はデバッガ ([[lib:debug]]) などで利用されています。

    require 'pp'
    SCRIPT_LINES__ = {}
    require 'English'
    pp SCRIPT_LINES__

    # => {"/usr/local/lib/ruby/1.6/English.rb"=>
    #     ["alias $ERROR_INFO              $!\n",
    #      "alias $ERROR_POSITION          $@\n",
    #      "alias $LOADED_FEATURES         $\"\n",
    #               :
    #               :
    #      "alias $POSTMATCH               $'\n",
    #      "alias $LAST_PAREN_MATCH        $+\n"]}

なお、[[m:$SAFE]]レベルが 0 でなければ有効にはなりません。
また、[[m:Kernel#eval]] によるコンパイルは対象にはなりません。
