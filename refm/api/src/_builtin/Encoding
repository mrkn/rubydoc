#@since 1.9.0
=class Encoding

== Class Methods

--- aliases    -> Hash

Returns the hash of available encoding alias and original encoding name.

  p Encoding.aliases
  #=> {"BINARY"=>"ASCII-8BIT", "ASCII"=>"US-ASCII", "ANSI_X3.4-1986"=>"US-ASCII",
      "SJIS"=>"Shift_JIS", "eucJP"=>"EUC-JP", "CP932"=>"Windows-31J"}

--- compatible?(str1, str2) -> Encoding | nil

2つの文字列に互換性があるかどうかをチェックします。互換性がある文字列は
結合させることができます。互換性があるときは、結合後の文字列が取るであ
ろう Encoding オブジェクトを返します。互換性がない場合は nil を返します。

@param str1   チェックする対象の文字列
@param str2   チェックする対象の文字列
@return       結合した場合の文字列の Encoding または nil

--- find(name) -> Encoding

指定された name という名前のエンコーディングを探します。

@param name   エンコーディングを表現した [[c:String]] または [[c:Symbol]]
@return       発見された Encoding
@raise ArgumentError 指定した名前のエンコーディングが発見できないと発生します。

--- list -> [Encoding]

現在ロードされているエンコーディングのリストを返します。

    Encoding.list
    => [#<Encoding:ASCII-8BIT>, #<Encoding:EUC-JP>,
        #<Encoding:Shift_JIS>, #<Encoding:UTF-8>,
        #<Encoding:ISO-2022-JP (dummy)>]
    
    Encoding.find("US-ASCII")
    => #<Encoding:US-ASCII>
    
    Encoding.list
    => [#<Encoding:ASCII-8BIT>, #<Encoding:EUC-JP>,
        #<Encoding:Shift_JIS>, #<Encoding:UTF-8>,
        #<Encoding:US-ASCII>, #<Encoding:ISO-2022-JP (dummy)>]

--- name_list    -> [Encoding]

Returns the list of available encoding names.

  p Encoding.name_list
  #=> ["US-ASCII", "ASCII-8BIT", "UTF-8",
       "ISO-8859-1", "Shift_JIS", "EUC-JP",
       "Windows-31J",
       "BINARY", "CP932", "eucJP"]

This list doesn't include dummy encodings.

--- default_external -> Encoding
#@todo

Returns default external encoding.

It is initialized by the locale or -E option.

--- locale_charmap -> String
#@todo

Returns the locale charmap name.

  Debian GNU/Linux
    LANG=C
      Encoding.locale_charmap  => "ANSI_X3.4-1968"
    LANG=ja_JP.EUC-JP
      Encoding.locale_charmap  => "EUC-JP"

  SunOS 5
    LANG=C
      Encoding.locale_charmap  => "646"
    LANG=ja
      Encoding.locale_charmap  => "eucJP"

@see [[man:charmap(5)]]

== Instance Methods

--- base_encoding -> Encoding | nil

self が別のエンコーディングから派生したエンコーディングである場合、もと
となったエンコーディングを返します。そのようなエンコーディングが存在し
なければ nil を返します。

--- inspect -> String

プログラマにわかりやすい表現の文字列を返します。

    Encoding::UTF_8.inspect       #=> "#<Encoding:UTF-8>"
    Encoding::ISO_2022_JP.inspect #=> "#<Encoding:ISO-2022-JP (dummy)>"

--- name -> String
--- to_s -> String

エンコーディングの名前を返します。

    Encoding::UTF_8.name       => "UTF-8"

--- dummy? -> bool

自身がダミーエンコーディングである場合に true を返します。
そうでない場合に false を返します。

ダミーエンコーディングとは Ruby がフルにサポートしていないエンコーディングのことです。
例えばステートフルなエンコーディングが該当します。
ダミーエンコーディングも [[c:IO]] の外部エンコーディングに指定できます。また
Ruby はサポートしていないが拡張ライブラリがサポートしているエンコーディングを扱う場合にも
用います。

  Encoding::ISO_2022_JP.dummy?       #=> true
  Encoding::UTF_8.dummy?             #=> false

== Constants

--- ASCII_8BIT
--- BINARY

変換を行わないエンコーディングオブジェクトです。

--- EUC_JP
--- EUC_JP_MS
--- EucJP
--- EUCJP

EUC-JP エンコーディングです。

--- ISO_2022_JP
--- ISO2022_JP

ISO-2022-JP エンコーディングです。

--- SHIFT_JIS
--- Shift_JIS
--- SJIS

Shift-JIS エンコーディングです。

--- US_ASCII
--- ASCII
--- ANSI_X3_4_1968

ASCII文字のみのエンコーディングです。通常の ASCII 文字の範囲外のバイト
(たとえば\x80など)が含まれる場合は正しいエンコーディングであるとみなし
ません。

--- UTF_16BE

--- UTF_16LE

--- UTF_32BE

--- UTF_32LE

--- UTF_8

UTF-8 エンコーディングです。

--- Big5
--- BIG5
--- CP950

--- CP51932

--- CP850
--- IBM850

--- CP852

--- CP855

--- CP936

--- CP949

--- EUCCN
--- EucCN

--- EUC_KR
--- EUCKR
--- EucKR

--- EUC_TW
--- EUCTW
--- EucTW

--- GB18030

--- GB1988

--- GBK
--- WINDOWS_936
--- Windows_936

--- IBM437
--- CP437

--- IBM737
--- CP737

--- IBM775
--- CP775

--- IBM852

--- IBM855

--- IBM857
--- CP857

--- IBM860
--- CP860

--- IBM861
--- CP861

--- IBM862
--- CP862

--- IBM863
--- CP863

--- IBM864
--- CP864

--- IBM865
--- CP865

--- IBM866
--- CP866

--- IBM869
--- CP869

--- ISO_2022_JP_2
--- ISO2022_JP2

--- ISO_8859_1
--- ISO8859_1

ISO-8859-1 エンコーディングです。

--- ISO_8859_10
--- ISO8859_10

--- ISO_8859_11
--- ISO8859_11

--- ISO_8859_13
--- ISO8859_13

--- ISO_8859_14
--- ISO8859_14

--- ISO_8859_15
--- ISO8859_15

--- ISO_8859_16
--- ISO8859_16

--- ISO_8859_2
--- ISO8859_2

--- ISO_8859_3
--- ISO8859_3

--- ISO_8859_4
--- ISO8859_4

--- ISO_8859_5
--- ISO8859_5

--- ISO_8859_6
--- ISO8859_6

--- ISO_8859_7
--- ISO8859_7

--- ISO_8859_8
--- ISO8859_8

--- ISO_8859_9
--- ISO8859_9

--- KOI8_R

--- KOI8_U

--- MacJapanese
--- MACJAPAN
--- MACJAPANESE
--- MacJapan

--- TIS_620

--- Windows_1250
--- CP1250
--- WINDOWS_1250

--- Windows_1251
--- CP1251
--- WINDOWS_1251

--- Windows_1252
--- CP1252
--- WINDOWS_1252

--- Windows_1253
--- CP1253
--- WINDOWS_1253

--- Windows_1254
--- CP1254
--- WINDOWS_1254

--- Windows_1255
--- CP1255
--- WINDOWS_1255

--- Windows_1256
--- CP1256
--- WINDOWS_1256

--- Windows_1257
--- CP1257
--- WINDOWS_1257

--- Windows_1258
--- CP1258
--- WINDOWS_1258

--- Windows_31J
--- CP932
--- CSWINDOWS31J
--- CsWindows31J
--- WINDOWS_31J

--- Windows_874
--- CP874
--- WINDOWS_874

--- EucJP_ms
--- EUCJP_MS

--- MacCentEuro
--- MACCENTEURO

--- MacCroatian
--- MACCROATIAN

--- MacCyrillic
--- MACCYRILLIC

--- MacGreek
--- MACGREEK

--- MacIceland
--- MACICELAND

--- MacRoman
--- MACROMAN

--- MacRomania
--- MACROMANIA

--- MacThai
--- MACTHAI

--- MacTurkish
--- MACTURKISH

--- MacUkraine
--- MACUKRAINE


#@end
