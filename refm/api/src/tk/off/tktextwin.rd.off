# $Id: tktextwin.rd,v 1.12 2001/03/18 12:39:31 arai Exp $
# Class TkTextWin is defined in tk.rb
=begin
= TkTextWin

テキストを入力するウィジェットのための抽象クラスです。このクラスはイン
スタンスを生成することができません。

メソッドの説明の中の((*位置*))の意味はこのモジュールをインクルードする
クラスによって異なります。

((-とりあえず、listboxの挙動から以下を記述した。textについても調べなけ
ればならない-))

== スーパークラス:

((<TkWindow>))

== メソッド:

--- TkTextWin#bbox(index)
    ((|index|))で指定した((*位置*))の要素を囲む矩形座標(('[x,y,w,h]'))を返
    します。無効な((|index|))を指定した場合空文字列(({""}))を返します。

--- TkTextWin#delete(first, last=None)
    ((|first|))、((|last|))で指定した((*位置*))の範囲の要素を削除します。
    ((|last|))を省略した場合、((|first|))の((*位置*))の要素だけを削除しま
    す。

--- TkTextWin#get(index)
--- TkTextWin#get(first, last)
    引数が1つの場合、指定した((*位置*))の要素を文字列で返します。
    引数が2つの場合、指定した範囲の要素を文字列で返します。

--- TkTextWin#index(index)
    ((|index|))で指定した((*位置*))の要素の位置を返します。
    ((-TkListBoxの場合は数値を返した方が良い？-))

--- TkTextWin#insert(index, chars, *args)
    ((|index|))で指定した((*位置*))に文字列((|chars|))を挿入します。

    空文字列(({""}))を返します。

    ((<TkListbox>))の場合((|args|))で複数のリスト要素を挿入することが出来ます。

--- TkTextWin#scan_mark(x, y)
    引数((|x|))、((|y|))と現在リストボックス内で見えている要素の範囲を記憶
    します。記憶した情報は((<TkTextWin#scan_dragto>))で使用されます。

    空文字列(({""}))を返します。

--- TkTextWin#scan_dragto(x, y)
    最後に((<TkTextWin#scan_mark>))を実行したときの引数((|x|))、((|y|))と
    引数((|x|))、((|y|)) の差を計算しその差分だけスクロールします。

    空文字列(({""}))を返します。

    以下は、マウスの左ボタンのドラッグでリストボックスをスクロールさせる例
    です。デフォルトでは中ボタンのドラッグが同じ設定になっています。

      require "tk"
      l = TkListbox.new {
        height 5
        100.times {|i| insert 'end', i}
      }.pack
      # p Tk.bindinfo(TkListbox, 'Button-2')
      # p Tk.bindinfo(TkListbox, 'B2-Motion')
      l.bind "Button-1", proc {|e| l.scan_mark(e.x, e.y); Tk.callback_break}
      l.bind "B1-Motion" , proc {|e| l.scan_dragto(e.x, e.y); Tk.callback_break}
      Tk.mainloop

    (({Tk.callback_break}))の呼び出しにより、クラスに登録されたイベントの
    呼び出しを抑止しています。

--- TkTextWin#see(index)
    ((|index|))で指定した((*位置*))の要素が見えるようにします。
    空文字列(({""}))を返します。

      require "tk"
      l = TkListbox.new {
        height 5
        100.times {|i| insert 'end', i}
      }.pack

      TkButton.new {
        command {l.see(50)}
      }.pack "fill"=>"x"
      Tk.mainloop

=end
