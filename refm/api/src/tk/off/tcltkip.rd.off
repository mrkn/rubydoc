# $Id: tcltkip.rd,v 1.13 2001/03/18 12:36:18 arai Exp $
# Class TclTkIp is defined in tcltklib.so
=begin
= TclTkIp

Tcl/Tkを直接扱うためのクラスです。

Ruby/Tkプログラミングにおいてこのクラスの存在を意識する必要はありませ
ん。((*詳細は、ext/tcltklib/MANUAL.euc を参照*))

((<TkCore::INTERP>))は、このクラスのインスタンスです。

== スーパークラス:

((<Object>))

== クラスメソッド:

--- TclTkIp.new
#@todo
    Tcl/Tk インタプリタオブジェクトを生成します。

== メソッド:

--- TclTkIp#_eval(str)
#@todo
    文字列((|str|))で指定した任意の Tcl/Tk スクリプトを実行します。実行結
    果を文字列で返します。

      require 'tcltklib'

      tcltk = TclTkIp.new
      p tcltk._eval <<-END
          button .b1 -text exit -command { exit }
          pack .b1
          return abc
      END
      tcltk.mainloop

--- TclTkIp#_invoke(cmd, *args)
#@todo
    任意の Tcl/Tk コマンド((|cmd|))を((|args|))を引数に実行します。実行結
    果を文字列で返します。

      require 'tcltklib'

      tcltk = TclTkIp.new
      p tcltk._invoke("button", ".b1", "-text", "exit", "-command", "exit")
      p tcltk._invoke("pack", ".b1")
      p tcltk._invoke("return", "abc")
      tcltk.mainloop

--- TclTkIp#_return_value
#@todo
    直前に実行した ((<TclTkIp#_invoke>))、((<TclTkIp#_eval>))が正常に終了した場合、0を返し
    ます。

--- TclTkIp#mainloop
#@todo
    Tcl/Tk のメインループを実行します。((<TclTkLib.mainloop>))と同じです。

    以下のように、インタプリタごとにメインループを実行することができます．

        require 'tcltklib'

        2.times {
          Thread.new {
            tcltk = TclTkIp.new
            p tcltk._eval <<-END
                button .b1
                pack .b1
                return abc
            END
            tcltk.mainloop
          }
        }

        sleep

--- TclTkIp#_toUTF8(str, encodename)
#@todo

--- TclTkIp#_fromUTF8(str, encodename)
#@todo

以下のメソッドは Tcl/Tk バージョンが 8.1 以降(日本語ローカライズなし)の
場合に定義されます。また、このとき _eval, _invoke は，引数と戻り値が
UTF-8とencodingで指定した文字列との間で相互変換されるよう再定義されます。

--- TclTkIp#encoding
#@todo

--- TclTkIp#encoding= val
#@todo

=end
