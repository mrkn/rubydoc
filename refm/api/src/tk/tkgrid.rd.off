# $Id: tkgrid.rd,v 1.15 2001/03/18 12:39:30 arai Exp $
# Module TkGrid is defined in tk.rb
=begin
= TkGrid

ウィジェットを配置するためのモジュールです。
このモジュールにより、ウィジェットは格子状に配置されます。

普通、ウィジェットを格子状に配置するには((<TkWindow#grid>))が使われます。

== インクルードしているモジュール:

((<Tk>))

== extendしているモジュール:

((<Tk>))

== モジュール関数:

--- TkGrid.bbox(master, column=nil, raw=nil, column2=nil, row2=nil)

--- TkGrid.configure(widget1, widget2, ..., options=nil)
    ((|wigetN|))に対して、((|options|))で指定した配置を行います。
    ((|options|))は、以下のキーを持つハッシュです。

    *"column"

     桁位置を指定します。桁位置は左から順に0,1,2,...と数えます。

    *"columnspan"

     配置に使用する横方向のセルの数を指定します。

    *"in"
    *"ipadx"
    *"ipady"
    *"padx"
    *"pady"

    *"row"

     行位置を指定します。行位置は上から順に0,1,2,...と数えます。

    *"rowspan"

     配置に使用する縦方向のセルの数を指定します。

    *"sticky"

--- TkGrid.columnconfigure(master, index, args)
    マスタウィジェット((|master|))の桁位置((|index|))に関する属性を
    ((|args|))で指定します。((|args|))は、以下をキーに持つハッシュです。

    *"minsize"
    *"weight"
    *"pad"

    ((|args|))に空のハッシュ(({{}}))を指定すると現在の設定を返します。
    ((-((|args|))のデフォルト値は、((<TkComm::None>))にした方が良い-))

      require "tk"

      f = TkFrame.new.pack
      p TkGrid.columnconfigure(f, 0, {})

      => "-minsize 0 -pad 0 -weight 0"

    ((-戻り値は、hashにしたい-))

--- TkGrid.rowconfigure(master, index, args)
    マスタウィジェット((|master|))の行位置((|index|))に関する属性を
    ((|args|))で指定します。((|args|))は、以下をキーに持つハッシュです。

    *"minsize"
    *"weight"
    *"pad"

    ((|args|))に空のハッシュ(({{}}))を指定すると現在の設定を返します。
    ((-((|args|))のデフォルト値は、((<TkComm::None>))にした方が良い-))

      require "tk"

      f = TkFrame.new.pack
      p TkGrid.rowconfigure(f, 0, {})
      p TkGrid.rowconfigure(f, 0, {'minsize'=>10})
      p TkGrid.rowconfigure(f, 0, {})

      => "-minsize 0 -pad 0 -weight 0"
         ""
         "-minsize 10 -pad 0 -weight 0"

    ((-戻り値は、hashにしたい-))

      require "tk"

      module TkGrid
        def columnconfigure(master, index, args=None)
          Hash[tk_split_list(tk_call "grid", 'columnconfigure', master, index, *hash_kv(args))]
        end

        def rowconfigure(master, index, args=None)
          tk_tcl2ruby(tk_call "grid", 'rowconfigure', master, index, *hash_kv(args))
        end

        module_function :columnconfigure, :rowconfigure
      end


      f = TkFrame.new.pack
      p TkGrid.columnconfigure(f, 0)
      p TkGrid.columnconfigure(f, 0, {'minsize'=>10})
      p TkGrid.columnconfigure(f, 0)

      f = TkFrame.new.pack
      p TkGrid.rowconfigure(f, 0)
      p TkGrid.rowconfigure(f, 0, {'minsize'=>10})
      p TkGrid.rowconfigure(f, 0)

--- TkGrid.columnconfiginfo(master, index, slot=nil)

--- TkGrid.rowconfiginfo(master, index, slot=nil)

--- TkGrid.add(widget, *args)

--- TkGrid.forget(*args)

--- TkGrid.info(slave)

--- TkGrid.location(master, x, y)

--- TkGrid.propagate(master, bool=None)

--- TkGrid.remove(*args)

--- TkGrid.size(master)

--- TkGrid.slaves(master, args)

=end
