= module TkcTagAccess

include TkComm
include TkTreatTagFont

== Instance Methods

--- &(tag)
#@todo

Following operators support logical expressions of canvas tags
(for Tk8.3+). If tag1.path is 't1' and tag2.path is 't2', then

     ltag = tag1 & tag2; ltag.path => "(t1)&&(t2)"
     ltag = tag1 | tag2; ltag.path => "(t1)||(t2)"
     ltag = tag1 ^ tag2; ltag.path => "(t1)^(t2)"
     ltag = - tag1;      ltag.path => "!(t1)"

--- -@
#@todo



--- ^(tag)
#@todo



--- addtag(tag)
#@todo



--- bbox
#@todo



--- bind(seq, *args)
#@todo

  def bind(seq, cmd=Proc.new, *args)
  
    @c.itembind(@id, seq, cmd, *args)
    self
  
  end

--- bind_append(seq, *args)
#@todo

  def bind_append(seq, cmd=Proc.new, *args)
  
    @c.itembind_append(@id, seq, cmd, *args)
    self
  
  end

--- bind_remove(seq)
#@todo



--- bindinfo(seq = nil)
#@todo



--- cget(option)
#@todo



--- configinfo(key = nil)
#@todo

  def configure(keys)
  
    @c.itemconfigure @id, keys
  
  end

--- configure(key, value = Tk::None)
#@todo



--- coords(*args)
#@todo



#@since 1.8.2
--- current_configinfo(key = nil)
#@todo

#@end


--- dchars(first, last = Tk::None)
#@todo




--- dtag(tag_to_del = Tk::None)
#@since 1.8.3
--- deltag(tag_to_del = Tk::None)
#@todo
#@end


--- find
--- list
#@todo



--- focus
#@todo



--- gettags
#@todo



--- icursor(index)
#@todo



--- index(idx)
#@todo



--- insert(beforethis, string)
#@todo



--- itemtype
#@todo


--- lower(belowthis = Tk::None)
#@todo



--- move(xamount, yamount)
#@todo



--- raise(abovethis = Tk::None)
#@todo



--- scale(xorigin, yorigin, xscale, yscale)
#@todo



--- select_adjust(index)
#@todo



--- select_from(index)
#@todo



--- select_to(index)
#@todo



--- |(tag)
#@todo



