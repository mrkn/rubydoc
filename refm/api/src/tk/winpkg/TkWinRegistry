= module TkWinRegistry
extend Tk
extend TkWinRegistry

== Constants

--- TkCommandNames
#@todo
#@# = ['registry'.freeze].freeze

== Class Methods

#@if(version <= "1.8.1")
--- delete(keynam, valnam = nil)
#@todo
#@else
--- delete(keynam, valnam = Tk::None)
#@todo

#@end

--- get(keynam, valnam)
#@todo

#@if(version <= "1.8.1")
--- keys(keynam)
#@todo
#@else
--- keys(keynam, pattern = nil)
#@todo

#@end

#@if(version <= "1.8.1")
--- set(keynam, valnam = nil, data = nil, dattype = nil)
#@todo
#@else
--- set(keynam, valnam = Tk::None, data = Tk::None, dattype = Tk::None)
#@todo

#@end

--- type(keynam, valnam)
#@todo

#@if(version <= "1.8.1")
--- values(keynam)
#@todo
#@else
--- values(keynam, pattern = nil)
#@todo

#@end

== Instance Methods

#@since 1.8.2
--- broadcast(keynam, timeout = nil)
#@todo

#@end

#@if(version <= "1.8.1")
--- delete(keynam, valnam = nil)
#@todo
#@else
--- delete(keynam, valnam = Tk::None)
#@todo

#@end

--- get(keynam, valnam)
#@todo

#@if(version <= "1.8.1")
--- keys(keynam)
#@todo
#@else
--- keys(keynam, pattern = nil)
#@todo

#@end

#@if(version <= "1.8.1")
--- set(keynam, valnam = nil, data = nil, dattype = nil)
#@todo
#@else
--- set(keynam, valnam = Tk::None, data = Tk::None, dattype = Tk::None)
#@todo

#@end

--- type(keynam, valnam)
#@todo

#@if(version <= "1.8.1")
--- values(keynam)
#@todo
#@else
--- values(keynam, pattern = nil)
#@todo

#@end
