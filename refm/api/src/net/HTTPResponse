= class Net::HTTPResponse < Object

include Net::HTTPHeader

HTTP レスポンスを表現するクラスです。
Net::HTTP クラスは実際には HTTPResponse のサブクラスを返します。

== Class Methods

--- new(http_version, result_code, message)

ライブラリ内部用メソッドです。使わないでください。

--- body_permitted?

== Instance Methods

--- code

HTTP のリザルトコードです。例えば '302' などです。

--- message
--- msg

HTTP サーバがリザルトコードに付加して返すメッセージです。
例えば 'Not Found' などです。

--- http_version

サーバがサポートしている HTTP のバージョンを文字列で返します。

#@since 1.8.0
--- to_ary
#@end

--- value

--- response
--- header
--- reader_header

互換性を保つためだけに導入されたメソッドです。
使わないでください。

--- body
--- entity

エンティティボディです。
[[m:Net::HTTPResponse#read_body]] を呼んでいればその引数 dest、
呼んでいなければエンティティボディを文字列として読みこんで返します。

--- read_body(dest = '')

エンティティボディを取得し dest に << メソッドを使って書きこみます。
同じ HTTPResponse オブジェクトに対して二回以上呼ばれた場合、
二回目からはなにもせずに一回目の戻り値をそのまま返します。

--- read_body {|str| .... }

エンティティボディを少しづつ取得して順次ブロックに与えます。


= class Net::HTTPUnknownResponse < Net::HTTPResponse

= class Net::HTTPInformation < Net::HTTPResponse
1xx
= class Net::HTTPSuccess < Net::HTTPResponse
2xx
= class Net::HTTPRedirection < Net::HTTPResponse
3xx
= class Net::HTTPClientError < Net::HTTPResponse
4xx
= class Net::HTTPServerError < Net::HTTPResponse
5xx

= class Net::HTTPContinue < Net::HTTPInformation
100
= class Net::HTTPSwitchProtocol < Net::HTTPInformation
101

= class Net::HTTPOK < Net::HTTPSuccess
200
= class Net::HTTPCreated < Net::HTTPSuccess
201
= class Net::HTTPAccepted < Net::HTTPSuccess
202
= class Net::HTTPNonAuthoritativeInformation < Net::HTTPSuccess
203
= class Net::HTTPNoContent < Net::HTTPSuccess
204
= class Net::HTTPResetContent < Net::HTTPSuccess
205
= class Net::HTTPPartialContent < Net::HTTPSuccess
206

= class Net::HTTPMultipleChoice < Net::HTTPRedirection
300
= class Net::HTTPMovedPermanently < Net::HTTPRedirection
301
= class Net::HTTPFound < Net::HTTPRedirection
302
#@# alias: Net::HTTPMovedTemporarily
= class Net::HTTPSeeOther < Net::HTTPRedirection
303
= class Net::HTTPNotModified < Net::HTTPRedirection
304
= class Net::HTTPUseProxy < Net::HTTPRedirection
305
#@# 306 unused
= class Net::HTTPTemporaryRedirect < Net::HTTPRedirection
307

= class Net::HTTPBadRequest < Net::HTTPClientError
400
= class Net::HTTPUnauthorized < Net::HTTPClientError
401
= class Net::HTTPPaymentRequired < Net::HTTPClientError
402
= class Net::HTTPForbidden < Net::HTTPClientError
403
= class Net::HTTPNotFound < Net::HTTPClientError
404
= class Net::HTTPMethodNotAllowed < Net::HTTPClientError
405
= class Net::HTTPNotAcceptable < Net::HTTPClientError
406
= class Net::HTTPProxyAuthenticationRequired < Net::HTTPClientError
407
= class Net::HTTPRequestTimeOut < Net::HTTPClientError
408
= class Net::HTTPConflict < Net::HTTPClientError
409
= class Net::HTTPGone < Net::HTTPClientError
410
= class Net::HTTPLengthRequired < Net::HTTPClientError
411
= class Net::HTTPPreconditionFailed < Net::HTTPClientError
412
= class Net::HTTPRequestEntityTooLarge < Net::HTTPClientError
413
= class Net::HTTPRequestURITooLong < Net::HTTPClientError
#@# alias: Net::HTTPRequestURITooLarge
414
= class Net::HTTPUnsupportedMediaType < Net::HTTPClientError
415
= class Net::HTTPRequestedRangeNotSatisfiable < Net::HTTPClientError
416
= class Net::HTTPExpectationFailed < Net::HTTPClientError
417

= class Net::HTTPInternalServerError < Net::HTTPServerError
500
= class Net::HTTPNotImplemented < Net::HTTPServerError
501
= class Net::HTTPBadGateway < Net::HTTPServerError
502
= class Net::HTTPServiceUnavailable < Net::HTTPServerError
503
= class Net::HTTPGatewayTimeOut < Net::HTTPServerError
504
= class Net::HTTPVersionNotSupported < Net::HTTPServerError
505
