= class WIN32OLE_VARIABLE < Object

WIN32OLE_VARIABLE objects represent OLE variable information.

     WIN32OLE_VARIABLE#name
 
Returns the name of variable.

     tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
     variables = tobj.variables
     variables.each do |variable|
       puts "#{variable.name}"
     end

     The result of above script is following:
       xlChart
       xlDialogSheet
       xlExcel4IntlMacroSheet
       xlExcel4MacroSheet
       xlWorksheet
== Instance Methods

--- name
#@todo
alias to_s

Returns the name of variable.

   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
   variables = tobj.variables
   variables.each do |variable|
     puts "#{variable.name}"
   end

   The result of above script is following:
     xlChart
     xlDialogSheet
     xlExcel4IntlMacroSheet
     xlExcel4MacroSheet
     xlWorksheet

--- ole_type
#@todo

Returns OLE type string.

  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
  variables = tobj.variables
  variables.each do |variable|
    puts "#{variable.ole_type} #{variable.name}"
  end

  The result of above script is following:
    INT xlChart
    INT xlDialogSheet
    INT xlExcel4IntlMacroSheet
    INT xlExcel4MacroSheet
    INT xlWorksheet

--- ole_type_detail
#@todo

Returns detail information of type. The information is array
of type.

   tobj = WIN32OLE_TYPE.new('DirectX 7 for Visual Basic Type Library', 'D3DCLIPSTATUS')
   variable = tobj.variables.find {|variable| variable.name == 'lFlags'}
   tdetail  = variable.ole_type_detail
   p tdetail # => ["USERDEFINED", "CONST_D3DCLIPSTATUSFLAGS"]

--- name
#@todo
alias to_s

Returns the name of variable.

   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
   variables = tobj.variables
   variables.each do |variable|
     puts "#{variable.name}"
   end

   The result of above script is following:
     xlChart
     xlDialogSheet
     xlExcel4IntlMacroSheet
     xlExcel4MacroSheet
     xlWorksheet

--- value
#@todo

Returns value if value is exists. If the value does not exist,
this method returns nil.

   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
   variables = tobj.variables
   variables.each do |variable|
     puts "#{variable.name} = #{variable.value}"
   end

   The result of above script is following:
     xlChart = -4109
     xlDialogSheet = -4116
     xlExcel4IntlMacroSheet = 4
     xlExcel4MacroSheet = 3
     xlWorksheet = -4167

--- variable_kind
#@todo

Returns variable kind string.

   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
   variables = tobj.variables
   variables.each do |variable|
     puts "#{variable.name} #{variable.variable_kind}"
   end

   The result of above script is following:
     xlChart CONSTANT
     xlDialogSheet CONSTANT
     xlExcel4IntlMacroSheet CONSTANT
     xlExcel4MacroSheet CONSTANT
     xlWorksheet CONSTANT

--- varkind
#@todo

Returns the number which represents variable kind.

  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
  variables = tobj.variables
  variables.each do |variable|
    puts "#{variable.name} #{variable.varkind}"
  end

  The result of above script is following:
     xlChart 2
     xlDialogSheet 2
     xlExcel4IntlMacroSheet 2
     xlExcel4MacroSheet 2
     xlWorksheet 2

--- visible?
#@todo

Returns true if the variable is public.

   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')
   variables = tobj.variables
   variables.each do |variable|
     puts "#{variable.name} #{variable.visible?}"
   end

   The result of above script is following:
     xlChart true
     xlDialogSheet true
     xlExcel4IntlMacroSheet true
     xlExcel4MacroSheet true
     xlWorksheet true

