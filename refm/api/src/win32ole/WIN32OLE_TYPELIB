= class WIN32OLE_TYPELIB < Object
WIN32OLE_TYPELIB objects represent OLE tyblib information.

== Class Methods

--- new(typelib [, version1, version2]) -> WIN32OLE_TYPELIB object
#@todo

Returns a new WIN32OLE_TYPELIB object.

The first argument typelib specifies OLE type library name or
GUID or OLE library file. The second argument is major version
or version of the type library. The third argument is minor version.
The second argument and third argument are optional. If the first
argument is type library name, then the second and third argument
are ignored.

    tlib1 = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
    tlib2 = WIN32OLE_TYPELIB.new('{00020813-0000-0000-C000-000000000046}')
    tlib3 = WIN32OLE_TYPELIB.new('{00020813-0000-0000-C000-000000000046}', 1.3)
    tlib4 = WIN32OLE_TYPELIB.new('{00020813-0000-0000-C000-000000000046}', 1, 3)
    tlib5 = WIN32OLE_TYPELIB.new("C:\WINNT\SYSTEM32\SHELL32.DLL")
    puts tlib1.name  # -> 'Microsoft Excel 9.0 Object Library'
    puts tlib2.name  # -> 'Microsoft Excel 9.0 Object Library'
    puts tlib3.name  # -> 'Microsoft Excel 9.0 Object Library'
    puts tlib4.name  # -> 'Microsoft Excel 9.0 Object Library'
    puts tlib5.name  # -> 'Microsoft Shell Controls And Automation'


--- typelibs

Returns the array of WIN32OLE_TYPELIB object.

   tlibs = WIN32OLE_TYPELIB.typelibs

== Instance Methods

--- guid -> The guid String.
#@todo

Returns guid string which specifies type library.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   guid = tlib.guid # -> '{00020813-0000-0000-C000-000000000046}'

--- library_name 
#@todo

Returns library name. If the method fails to access library name,
WIN32OLERuntimeError is raised.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   tlib.library_name # => Excel

--- major_version -> The type library major version. 
#@todo

Returns the type library major version.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   puts tlib.major_version # -> 1

--- minor_version -> The type library minor version. 
#@todo

Returns the type library minor version.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   puts tlib.minor_version # -> 3

--- name -> The type library name
#@todo
alias to_s

Returns the type library name.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   name = tlib.name # -> 'Microsoft Excel 9.0 Object Library'

--- ole_classes

Alias for #ole_types

--- ole_types -> The Array of WIN32OLE_TYPE object included the type library.
#@todo
alias ole_classes

Returns the type library file path.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   classes = tlib.ole_types.collect{|k| k.name} # -> ['AddIn', 'AddIns' ...]

--- path -> The type library file path. 
#@todo

Returns the type library file path.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   puts tlib.path #-> 'C:\...\EXCEL9.OLB'

--- name -> The type library name
#@todo
alias to_s

Returns the type library name.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   name = tlib.name # -> 'Microsoft Excel 9.0 Object Library'

--- version -> The type library version. 
#@todo

Returns the type library version.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   puts tlib.version #-> 1.3

--- visible? 
#@todo

Returns true if the type library information is not hidden. If
wLibFlags of TLIBATTR is 0 or LIBFLAG_FRESTRICTED or LIBFLAG_FHIDDEN,
the method returns false, otherwise, returns true. If the method
fails to access the TLIBATTR information, then WIN32OLERuntimeError
is raised.

   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')
   tlib.visible? # => true

