= class TCPSocket < IPSocket

インターネットドメインのストリーム型ソケットのクラス。通常の
[[c:IO]] クラスのサブクラスと同
様の入出力ができます。このクラスによってソケットを用いたクラ
イアントを簡単に記述できるようになります。

ユーザの入力をそのままサーバに転送するプログラムは以下の
ようになります。

  require "socket"
  
  port = if ARGV.size > 0 then ARGV.shift else 4444 end
  print port, "\n"
  
  s = TCPSocket.open("localhost", port)
  
  while gets
    s.write($_)
    print(s.gets)
  end
  s.close

== Class Methods

--- open(host, service, local_host=nil, local_service=nil) -> TCPSocket
--- new(host, service, local_host=nil, local_service=nil) -> TCPSocket
#@todo

host で指定したホストの service で指定したポートと接続したソケッ
トを返します。host はホスト名、または octet decimal
によるインターネットアドレスを示す文字列、service
は /etc/services (または NIS) に登録されているサー
ビス名かポート番号です。

#@if (version >= "1.8.0")
引数 local_host, local_service を指定した場合、そのアドレス
に対して [[man:bind(2)]] します。
#@end

@param host           ホスト名、または octet decimal によるインターネットアドレスを示す文字列を指定します。
@param service        /etc/services (または NIS) に登録されているサービス名かポート番号を指定します。
@param local_host     ホスト名、または octet decimal によるインターネットアドレスを示す文字列を指定します。
@param local_service  /etc/services (または NIS) に登録されているサービス名かポート番号を指定します。

--- gethostbyname(host) -> Array

ホスト名または IP アドレス (整数または"127.0.0.1"
のような文字列)からホストの情報を返します。ホスト情報は、ホ
スト名、ホストの別名の配列、ホストのアドレスタイプ、ホストの
アドレスを各要素とする配列です。ホストのアドレスは octet
decimal の文字列 ("127.0.0.1"のような文字列) です。

@param host ホスト名または IP アドレス (整数または"127.0.0.1" のような文字列)を指定します。

@return ホスト名、ホストの別名の配列、ホストのアドレスタイプ、ホストのアドレスを各要素とする配列を返します。

例:

  p TCPSocket.gethostbyname("www.ruby-lang.org")
  #=> ["beryllium.ruby-lang.org", [], 2, "210.163.138.100"]
