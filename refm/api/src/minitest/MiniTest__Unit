= class MiniTest::Unit

ユニットテストで使用する様々なメソッドを定義しているクラスです。

== Public Instance Methods

--- assertion_count -> Fixnum

アサーション数を返します。

--- assertion_count=(count)

アサーション数をセットします。

@param count 件数を指定します。

--- errors -> Fixnum

エラー数を返します。

--- errors=(count)

エラー数をセットします。

@param count 件数を指定します。

--- failures -> Fixnum

失敗したアサーション数を返します。

--- failures=(count)

失敗したアサーション数をセットします。

@param count 件数を指定します。

--- location(exception) -> String

与えられた例外の発生した場所を返します。

--- puke(klass, method_name, exception) -> String

テストメソッドの実行結果が成功以外の場合に、その種類と理由を記録します。

@param klass テストクラスを指定します。

@param method_name テストメソッドの名前を指定します。

@param exception 例外クラスを指定します。

@return 与えられた例外クラスによって "Skip", "Failure", "Error" の
        いずれかの頭文字を返します。

--- report -> Array

テストメソッドの実行結果のリストを返します。

--- report=(list)

テストメソッドの実行結果のリストをセットします。

@param list テストメソッドの実行結果のリストを指定します。

--- run(args = []) -> Fixnum | nil

全てのテストを実行するためのメソッドです。

@param args コマンドライン引数を指定します。

--- run_test_suites(filter = /./) -> Array

全てのテストを実行します。

@param filter 実行するテストメソッド名を正規表現で指定します。

@return テストケース数とアサーション数を返します。

--- skips -> Fixnum

実行しなかったテストケース数を返します。

--- skips=(count)

実行しなかったテストケース数をセットします。

@param count 件数を指定します。

--- test_count -> Fixnum

テストケース数を返します。

--- test_count=(count)

テストケース数をセットします。

@param count 件数を指定します。

#@since 1.9.2
---process_args(args = []) -> Hash

[[lib:optparse]] を使ってコマンドライン引数を解析した結果を返します。

@param args コマンドライン引数を指定します。

@see [[lib:optparse]]

---start_time -> Time

テストの実行開始時刻を返します。

---start_time=(time)

テストの実行開始時刻をセットします。

@param time [[c:Time]] オブジェクトを指定します。

---status(io = @@out) -> ()

テスト結果を与えられた IO に書き込みます。

@param io テスト結果の出力先を指定します。


#@end

== Singleton Methods

--- autorun -> ()
#@todo

--- output=(stream)

出力先をセットします。

@param stream [[c:IO]] を指定します。

== Constants

--- VERSION -> String

このライブラリのバージョンを返します。



