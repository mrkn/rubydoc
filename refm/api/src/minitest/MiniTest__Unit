= class MiniTest::Unit
#@todo

== Public Instance Methods

--- assertion_count -> Fixnum
#@todo

アサーション数を返します。

--- assertion_count=(count)
#@todo

アサーション数をセットします。

@param count 件数を指定します。

--- errors -> Fixnum
#@todo

エラー数を返します。

--- errors=(count)
#@todo

エラー数をセットします。

@param count 件数を指定します。

--- failures -> Fixnum
#@todo

失敗したアサーション数を返します。

--- failures=(count)
#@todo

失敗したアサーション数をセットします。

@param count 件数を指定します。

--- location(exception) -> String
#@todo

与えられた例外の発生した場所を返します。

--- puke(klass, method_name, exception) -> String
#@todo

テストメソッドの実行結果が成功以外の場合に、その種類と理由を記録します。

@param klass テストクラスを指定します。

@param method_name テストメソッドの名前を指定します。

@param exception 例外クラスを指定します。

@return 与えられた例外クラスによって "Skip", "Failure", "Error" の
        いずれかの頭文字を返します。

--- report -> Array
#@todo

テストメソッドの実行結果のリストを返します。

--- report=(list)
#@todo

テストメソッドの実行結果のリストをセットします。

@param list テストメソッドの実行結果のリストを指定します。

--- run(args = []) -> Fixnum | nil
#@todo

全てのテストを実行するためのメソッドです。

@param args コマンドライン引数を指定します。

--- run_test_suites(filter = /./) -> Array
#@todo

全てのテストを実行します。

@param fileter 実行するテストメソッド名を正規表現で指定します。

@return テストケース数とアサーション数を返します。

--- skips -> Fixnum
#@todo

実行しなかったテストケース数を返します。

--- skips=(count)
#@todo

実行しなかったテストケース数をセットします。

@param count 件数を指定します。

--- test_count -> Fixnum
#@todo

テストケース数を返します。

--- test_count=(count)
#@todo

テストケース数をセットします。

@param count 件数を指定します。

== Singleton Methods

--- autorun
#@todo

--- disable_autorun
#@todo

--- output=(stream)
#@todo

出力先をセットします。

@param stream [[c:IO]] を指定します。

== Constants

--- VERSION -> String

このライブラリのバージョンを返します。



