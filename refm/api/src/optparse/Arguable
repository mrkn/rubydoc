= module OptionParser::Arguable

主に [[m:Kernel::ARGV]] を拡張するために用意されたモジュールです。
[[lib:optparse]] を require することにより、ARGV は
OptionParser::Arguable を extend します。

コマンドライン引数を表す、一般の文字列の配列を拡張するためにも使うことができます。

== Instance Methods

--- options=(opt)
#@todo

自身をパースするための [[c:OptionParser]] オブジェクトをセットします。

opt が nil か false である場合、自身の options= メソッドと options メソッドを
undef します。

@param opt 自身をパースする [[c:OptionParser]] 、あるいは nil か false を指定します。

--- options                -> OptionParser
--- options{|opt| ... }    -> obj | nil
#@todo

自身をパースするための [[c:OptionParser]] を返します。
初回呼び出し時に自動的に生成されます。
この [[m:OptionParser#default_argv]] には self がセットされています。

ブロックを与えた場合は、[[c:OptionParser]] を引数としてブロックを実行します。
ブロックの実行結果を返します。
ブロックの実行途中で [[c:OptionParser::ParseError]] 
が発生した場合は、全て rescue し、エラーメッセージを出力し、
nil を返します。

--- order!               -> [String]
--- order!{|s| ... }     -> [String]
--- permute!             -> [String]
--- parse!               -> [String]
#@todo

自身を破壊的にパースし、パースされずに残った引数を文字列の配列として返します。
[[m:OptionParser#order!]]、[[m:OptionParser#parse!]]、[[m:OptionParser#permute!]]
をそれぞれ参照して下さい。

#@since 1.8.5
--- getopts
#@todo

[[lib:getopts]] 相当の機能を提供します。
[[m:OptionParser#getopts]]を参照して下さい。

#@end
