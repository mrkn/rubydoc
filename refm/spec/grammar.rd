###nonref

= Rubyの文法

* ((<字句構造>))
  * ((<字句構造/識別子>))
  * ((<字句構造/コメント>))
  * ((<字句構造/埋め込みドキュメント>))
  * ((<字句構造/予約語>))
* ((<プログラム>))
  * ((<プログラム/式>))
  * ((<プログラム/プログラムの終り>))
* ((<変数と定数>))
  * ((<変数と定数/ローカル変数>))
  * ((<変数と定数/インスタンス変数>))
  * ((<変数と定数/クラス変数>))
  * ((<変数と定数/グローバル変数>))
  * ((<変数と定数/疑似変数>))
  * ((<変数と定数/定数>))
    * ((<変数と定数/定数参照の優先順位>))
* ((<リテラル>))
  * ((<リテラル/数値リテラル>))
  * ((<リテラル/文字列リテラル>))
    * ((<リテラル/バックスラッシュ記法>))
    * ((<リテラル/式展開>))
  * ((<リテラル/コマンド出力>))
  * ((<リテラル/ヒアドキュメント (行指向文字列リテラル)>))
  * ((<リテラル/正規表現>))
  * ((<リテラル/配列式>))
  * ((<リテラル/ハッシュ式>))
  * ((<リテラル/範囲オブジェクト>))
  * ((<リテラル/シンボル>))
  * ((<リテラル/%記法>))
* ((<演算子式>))
  * ((<演算子式/代入>))
    * ((<演算子式/自己代入>))
    * ((<演算子式/多重代入>))
  * ((<演算子式/範囲式>))
  * ((<演算子式/and>))
  * ((<演算子式/or>))
  * ((<演算子式/not>))
  * ((<演算子式/条件演算子>))
* ((<制御構造>))
  * ((<制御構造/条件分岐>))
    * ((<制御構造/if>))
    * ((<制御構造/if 修飾子>))
    * ((<制御構造/unless>))
    * ((<制御構造/unless 修飾子>))
    * ((<制御構造/case>))
  * ((<制御構造/繰り返し>))
    * ((<制御構造/while>))
    * ((<制御構造/while 修飾子>))
    * ((<制御構造/until>))
    * ((<制御構造/until修飾子>))
    * ((<制御構造/for>))
    * ((<制御構造/break>))
    * ((<制御構造/next>))
    * ((<制御構造/redo>))
    * ((<制御構造/retry>))
  * ((<制御構造/例外処理>))
    * ((<制御構造/raise>))
    * ((<制御構造/begin>))
    * ((<制御構造/rescue修飾子>))
  * ((<制御構造/その他>))
    * ((<制御構造/return>))
    * ((<制御構造/BEGIN>))
    * ((<制御構造/END>))
* ((<メソッド呼び出し>))
  * ((<メソッド呼び出し/super>))
  * ((<メソッド呼び出し/ブロック付きメソッド呼び出し>))（((<メソッド呼び出し/イテレータ>))）
  * ((<メソッド呼び出し/yield>))
* ((<クラス／メソッドの定義>))
  * ((<クラス／メソッドの定義/クラス定義>))
  * ((<クラス／メソッドの定義/特異クラス定義>))
  * ((<クラス／メソッドの定義/モジュール定義>))
  * ((<クラス／メソッドの定義/メソッド定義>))
    * ((<クラス／メソッドの定義/演算子式の定義>))
    * ((<クラス／メソッドの定義/メソッド定義のネスト>))
    * ((<クラス／メソッドの定義/メソッドの評価>))
  * ((<クラス／メソッドの定義/特異メソッド定義>))
  * ((<クラス／メソッドの定義/クラスメソッドの定義>))
  * ((<クラス／メソッドの定義/呼び出し制限>))
  * ((<クラス／メソッドの定義/定義に関する操作>))
    * ((<クラス／メソッドの定義/alias>))
    * ((<クラス／メソッドの定義/undef>))
    * ((<クラス／メソッドの定義/defined?>))
